from enum import Enum, unique
from feapack.typing import Float3D, Tuple

@unique
class Spectrums(Enum):
    """Available spectrums."""
    Jet       =  0
    Rainbow   =  1
    Cyclic    =  2
    Parula    =  3
    Turbo     =  4
    Hot       =  5
    Cool      =  6
    Viridis   =  7
    Plasma    =  8
    Marc      =  9
    Linear    = 10
    Diverging = 11
    Grayscale = 12

    @property
    def baseColors(self) -> Tuple[Float3D]:
        """Returns the base colors of the specified spectrum."""
        match self:
            case Spectrums.Jet:
                return (
                    (0.0, 0.0, 1.0),
                    (0.0, 1.0, 1.0),
                    (0.0, 1.0, 0.0),
                    (1.0, 1.0, 0.0),
                    (1.0, 0.0, 0.0),
                )
            case Spectrums.Rainbow:
                return (
                    (0.5, 0.0, 1.0),
                    (0.0, 0.0, 1.0),
                    (0.0, 1.0, 1.0),
                    (0.0, 1.0, 0.0),
                    (1.0, 1.0, 0.0),
                    (1.0, 0.5, 0.0),
                    (1.0, 0.0, 0.0),
                )
            case Spectrums.Cyclic:
                return (
                    (1.0, 0.0, 0.0),
                    (1.0, 0.0, 1.0),
                    (0.0, 0.0, 1.0),
                    (0.0, 1.0, 1.0),
                    (0.0, 1.0, 0.0),
                    (1.0, 1.0, 0.0),
                    (1.0, 0.0, 0.0),
                )
            case Spectrums.Parula:
                return (
                    (0.24220000, 0.15040000, 0.66030000),
                    (0.25800645, 0.18230323, 0.75256129),
                    (0.27098710, 0.21587742, 0.83880000),
                    (0.27857419, 0.25802581, 0.90150000),
                    (0.28139032, 0.30346774, 0.94367419),
                    (0.27900968, 0.34819677, 0.97368710),
                    (0.26835484, 0.39362258, 0.99162581),
                    (0.23920645, 0.44122581, 0.99939032),
                    (0.19120968, 0.49077742, 0.98708710),
                    (0.17778387, 0.53506774, 0.96397419),
                    (0.16389355, 0.57679032, 0.93142258),
                    (0.14377742, 0.61567742, 0.90364516),
                    (0.11948710, 0.65282258, 0.88421290),
                    (0.08588065, 0.68626129, 0.85161613),
                    (0.01446774, 0.71378387, 0.80541613),
                    (0.01972258, 0.73612903, 0.75324516),
                    (0.12090323, 0.75438710, 0.69767097),
                    (0.18442903, 0.77174516, 0.63910968),
                    (0.23233548, 0.78881613, 0.57192581),
                    (0.32122903, 0.79963226, 0.49462581),
                    (0.42552258, 0.80289677, 0.40657419),
                    (0.54336129, 0.79603548, 0.31868710),
                    (0.65626774, 0.78186774, 0.23320323),
                    (0.76132258, 0.76241613, 0.17055806),
                    (0.85390323, 0.74257742, 0.15736452),
                    (0.93268387, 0.72928387, 0.20297742),
                    (0.99400645, 0.74015806, 0.23985161),
                    (0.99562258, 0.78617097, 0.20490323),
                    (0.97976452, 0.83620000, 0.17773226),
                    (0.96129677, 0.88740000, 0.15432903),
                    (0.96265161, 0.93656774, 0.12707097),
                    (0.97690000, 0.98390000, 0.08050000),
                )
            case Spectrums.Turbo:
                return (
                    (0.18995000, 0.07176000, 0.23217000),
                    (0.22584677, 0.16608484, 0.45656452),
                    (0.25225323, 0.25729258, 0.64291677),
                    (0.26918290, 0.34538323, 0.79121000),
                    (0.27663226, 0.43035677, 0.90144548),
                    (0.27457645, 0.51219806, 0.97355516),
                    (0.25255032, 0.59302355, 0.99874355),
                    (0.20309097, 0.67432710, 0.97080419),
                    (0.14645581, 0.75205065, 0.90674065),
                    (0.10346323, 0.82202097, 0.82403194),
                    (0.09505452, 0.88001419, 0.74020097),
                    (0.13944548, 0.92430710, 0.66019871),
                    (0.23069548, 0.95956710, 0.55991419),
                    (0.34944548, 0.98461323, 0.45087355),
                    (0.47617581, 0.99766774, 0.34778000),
                    (0.59127935, 0.99699903, 0.26535065),
                    (0.68094516, 0.98059065, 0.21740581),
                    (0.76448161, 0.94706677, 0.20316161),
                    (0.84189581, 0.89943548, 0.20935548),
                    (0.90811710, 0.84116065, 0.22228645),
                    (0.95812387, 0.77579710, 0.22823097),
                    (0.98721129, 0.70567419, 0.21433355),
                    (0.99674323, 0.62128484, 0.18311226),
                    (0.98950613, 0.52624258, 0.14298323),
                    (0.96757645, 0.42913387, 0.10086000),
                    (0.93297806, 0.33847839, 0.06359226),
                    (0.88769323, 0.26258968, 0.03783968),
                    (0.83097194, 0.19841355, 0.02115032),
                    (0.76179226, 0.14166581, 0.01009065),
                    (0.68016871, 0.09231097, 0.00463452),
                    (0.58610129, 0.05036677, 0.00478548),
                    (0.47960000, 0.01583000, 0.01055000),
                )
            case Spectrums.Hot:
                return (
                    (0.0, 0.0, 0.0),
                    (1.0, 0.0, 0.0),
                    (1.0, 1.0, 0.0),
                    (1.0, 1.0, 1.0),
                )
            case Spectrums.Cool:
                return (
                    (0.0, 1.0, 1.0),
                    (1.0, 0.0, 1.0),
                )
            case Spectrums.Viridis:
                return (
                    (0.26700400, 0.00487400, 0.32941500),
                    (0.27701800, 0.05034400, 0.37571500),
                    (0.28232700, 0.09495500, 0.41733100),
                    (0.28288400, 0.13592000, 0.45342700),
                    (0.27801200, 0.18036700, 0.48669700),
                    (0.26930800, 0.21881800, 0.50957700),
                    (0.25732200, 0.25613000, 0.52656300),
                    (0.24311300, 0.29209200, 0.53851600),
                    (0.22586300, 0.33080500, 0.54731400),
                    (0.21050300, 0.36372700, 0.55220600),
                    (0.19586000, 0.39543300, 0.55527600),
                    (0.18225600, 0.42618400, 0.55712000),
                    (0.16812600, 0.45998800, 0.55808200),
                    (0.15627000, 0.48962400, 0.55793600),
                    (0.14475900, 0.51909300, 0.55657200),
                    (0.13374300, 0.54853500, 0.55354100),
                    (0.12346300, 0.58168700, 0.54744500),
                    (0.11942300, 0.61114100, 0.53898200),
                    (0.12478000, 0.64046100, 0.52706800),
                    (0.14330300, 0.66945900, 0.51121500),
                    (0.18065300, 0.70140200, 0.48818900),
                    (0.22639700, 0.72888800, 0.46278900),
                    (0.28147700, 0.75520300, 0.43255200),
                    (0.34407400, 0.78002900, 0.39738100),
                    (0.42190800, 0.80577400, 0.35191000),
                    (0.49661500, 0.82637600, 0.30637700),
                    (0.57556300, 0.84456600, 0.25641500),
                    (0.65764200, 0.86021900, 0.20308200),
                    (0.75188400, 0.87495100, 0.14322800),
                    (0.83527000, 0.88602900, 0.10264600),
                    (0.91624200, 0.89609100, 0.10071700),
                    (0.99324800, 0.90615700, 0.14393600),
                )
            case Spectrums.Plasma:
                return (
                    (0.05038300, 0.02980300, 0.52797500),
                    (0.13238100, 0.02225800, 0.56325000),
                    (0.19337400, 0.01835400, 0.59033000),
                    (0.24803200, 0.01443900, 0.61286800),
                    (0.30621000, 0.00890200, 0.63369400),
                    (0.35635900, 0.00379800, 0.64781000),
                    (0.40550300, 0.00067800, 0.65697700),
                    (0.45367700, 0.00275500, 0.66031000),
                    (0.50645400, 0.01633300, 0.65620200),
                    (0.55171500, 0.04313600, 0.64527700),
                    (0.59501100, 0.07719000, 0.62791700),
                    (0.63600800, 0.11209200, 0.60520500),
                    (0.67916000, 0.15184800, 0.57518900),
                    (0.71488300, 0.18729900, 0.54633800),
                    (0.74828900, 0.22271100, 0.51683400),
                    (0.77960400, 0.25807800, 0.48753900),
                    (0.81261200, 0.29792800, 0.45533800),
                    (0.84015500, 0.33358000, 0.42745500),
                    (0.86607800, 0.36966000, 0.40012600),
                    (0.89034000, 0.40639800, 0.37313000),
                    (0.91547100, 0.44880700, 0.34289000),
                    (0.93563000, 0.48771200, 0.31595200),
                    (0.95342800, 0.52796000, 0.28888300),
                    (0.96852600, 0.56970000, 0.26172100),
                    (0.98182600, 0.61857200, 0.23128700),
                    (0.98993500, 0.66378700, 0.20485900),
                    (0.99410300, 0.71069800, 0.18009700),
                    (0.99385100, 0.75930400, 0.15909200),
                    (0.98762100, 0.81597800, 0.14436300),
                    (0.97626500, 0.86801600, 0.14335100),
                    (0.95927600, 0.92140700, 0.15156600),
                    (0.94001500, 0.97515800, 0.13132600),
                )
            case Spectrums.Marc:
                return (
                    (0.0, 0.0, 1.0),
                    (1.0, 0.0, 0.0),
                    (1.0, 1.0, 0.0),
                )
            case Spectrums.Linear:
                return (
                    (0.0, 0.0, 1.0),
                    (1.0, 0.0, 0.0),
                )
            case Spectrums.Diverging:
                return (
                    (0.0, 0.0, 1.0),
                    (1.0, 1.0, 1.0),
                    (1.0, 0.0, 0.0),
                )
            case Spectrums.Grayscale:
                return (
                    (0.0, 0.0, 0.0),
                    (1.0, 1.0, 1.0),
                )
